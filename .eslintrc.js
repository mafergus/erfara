module.exports = {
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "node": true,
  },
  "plugins": [
    "react"
  ],
  "parser": "babel-eslint",
  "parserOptions": {
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "no-debugger": 1,
    "no-console": 1,
    "semi": 1,
    "no-constant-condition": 1,
    "no-dupe-args": 1,
    "no-dupe-keys": 1,
    "no-duplicate-case": 1,
    "no-empty": 1,
    "no-extra-boolean-cast": 1,
    "no-extra-parens": 1,
    "no-extra-semi": 1,
    "no-func-assign": 1,
    "no-inner-declarations": 1,
    "no-irregular-whitespace": 1,
    "no-template-curly-in-string": 1,
    "no-unexpected-multiline": 1,
    "no-unreachable": 1,
    "no-unsafe-negation": 1,
    "use-isnan": 1,
    "valid-typeof": 1,
    "array-callback-return": 1,
    "block-scoped-var": 1,
    "class-methods-use-this": 0,
    // "consistent-return": 1,
    "curly": 1,
    "default-case": 1,
    "dot-location": ["warn", "property"],
    "eqeqeq": 1,
    "no-case-declarations": 1,
    "no-else-return": 1,
    "no-empty-function": 1,
    "no-empty-pattern": 1,
    "no-eq-null": 1,
    "no-extra-bind": 1,
    "yoda": 1,
    "no-fallthrough": 1,
    "no-global-assign": 1,
    "no-lone-blocks": 1,
    "no-loop-func": 1,
    "no-multi-spaces": 1,
    "no-multi-str": 1,
    "no-param-reassign": 1,
    "no-redeclare": 1,
    "no-return-await": 1,
    "no-unused-expressions": 1,
    "no-useless-concat": 1,
    "no-useless-escape": 1,
    "no-useless-return": 1,
    "prefer-promise-reject-errors": 1,
    "strict": 1,
    "no-unused-vars": 1,
    "no-path-concat": 1,
    "array-bracket-spacing": 1,
    "block-spacing": 1,
    // "brace-style": 1,
    // "comma-dangle": 1,
    "comma-spacing": 1,
    "comma-style": 1,
    "computed-property-spacing": 1,
    "func-call-spacing": 1,
    "func-name-matching": 1,
    // "indent": 1, // OOOFFFFF
    "key-spacing": 1,
    "keyword-spacing": 1,
    "linebreak-style": 1,
    "no-lonely-if": 1,
    "no-mixed-spaces-and-tabs": 1,
    "no-multiple-empty-lines": 1,
    "no-tabs": 1,
    "no-whitespace-before-property": 1,
    "semi-spacing": 1,
    "space-before-blocks": 1,
    "space-in-parens": 1,
    "spaced-comment": 1,
    "arrow-spacing": 1,
    "constructor-super": 1,
    "no-const-assign": 1,
    "no-dupe-class-members": 1,
    "no-duplicate-imports": 1,
    "no-this-before-super": 1,
    "no-useless-constructor": 1,
    "no-var": 1,
    "prefer-arrow-callback": 1,
    "prefer-const": 1,
    // "prefer-destructuring": 1, //Figure this out!
    "prefer-spread": 1,
    "require-yield": 1,
    "rest-spread-spacing": 1,
    "template-curly-spacing": 1,

    // Require that the first prop in a JSX element be on a new line when the element is multiline
    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-first-prop-new-line.md
    "react/jsx-first-prop-new-line": "warn",
    "react/jsx-uses-react": "warn",
    "react/jsx-uses-vars": "warn",
    "react/no-array-index-key": "warn",
    "react/no-deprecated": "warn",
    "react/no-did-mount-set-state": "warn",
    "react/no-did-update-set-state": "warn",
    "react/no-direct-mutation-state": "warn",
    "react/no-unescaped-entities": "warn",
    "react/no-unused-prop-types": "warn",
    "react/prefer-stateless-function": "warn",
    "react/prop-types": "warn",
    "react/react-in-jsx-scope": "warn",
    "react/require-default-props": "warn",
    "react/require-render-return": "warn",
    "react/sort-comp": "warn",
    "react/style-prop-object": "warn",
    "react/jsx-boolean-value": "warn",
    // "react/jsx-closing-bracket-location": "warn",
    "react/jsx-curly-spacing": "warn",
    "react/jsx-equals-spacing": "warn",
    "react/jsx-key": "warn",
    // "react/jsx-max-props-per-line": "warn", //This is nice, figure this out!
    "react/jsx-no-duplicate-props": "warn",
    "react/jsx-no-undef": "warn",
    "react/jsx-pascal-case": "warn",
    "react/jsx-space-before-closing": "warn",
    "react/jsx-uses-react": "warn",
    "react/jsx-uses-vars": "warn",
    
  },
};